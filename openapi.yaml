openapi: 3.0.1

info:
  title: MageStack API
  version: "1.0.0"
  description: |
    Bem-vindo √† MageStack API üîÆ

    Esta API facilita a cria√ß√£o, gerenciamento e compartilhamento de decks de Magic: The Gathering.
    Funcionalidades:
      - Cadastro e autentica√ß√£o de usu√°rios
      - CRUD de decks (criar, ler, atualizar, deletar)
      - Adi√ß√£o e remo√ß√£o de cartas em decks
      - Curtidas e coment√°rios nos decks
      - Estat√≠sticas de uso

  contact:
    name: Reposit√≥rio GitHub
    email: contato@magestack.com
    url: https://github.com/alanerochaa/MageStack-API

  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080/api
    description: Servidor local de desenvolvimento
  - url: https://api.mtgdeckbuilder.com
    description: Servidor de produ√ß√£o

tags:
  - name: Decks
    description: Opera√ß√µes de gerenciamento de decks
  - name: Cartas
    description: Opera√ß√µes relacionadas √†s cartas
  - name: Usu√°rios
    description: Cadastro e perfil de usu√°rios
  - name: Autentica√ß√£o
    description: Login, logout e refresh de token
  - name: Coment√°rios
    description: Coment√°rios em decks
  - name: Curtidas
    description: Curtidas em decks
  - name: Estat√≠sticas
    description: Relat√≥rios e m√©tricas da plataforma

paths:
  /decks:
    get:
      summary: Listar todos os decks
      tags: [Decks]
      responses:
        '200':
          description: Lista de decks retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "ID do deck"
                    nome:
                      type: string
                      description: "Nome do deck"
                    formato:
                      type: string
                      description: "Formato do deck"
                    descricao:
                      type: string
                      description: "Descri√ß√£o do deck"
                    usuarioId:
                      type: integer
                      description: "ID do usu√°rio"
                    publico:
                      type: boolean
                      description: "O deck √© p√∫blico"
                    dataCriacao:
                      type: string
                      format: date-time
                      description: "Data de cria√ß√£o do deck"
                    cartas:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: "ID da carta"
                          nome:
                            type: string
                            description: "Nome da carta"
                          tipo:
                            type: string
                            description: "Tipo da carta"
                          cor:
                            type: string
                            description: "Cor da carta"
                          custoMana:
                            type: string
                            description: "Custo de mana"
                          quantidade:
                            type: integer
                            description: "Quantidade de cartas"
                    comentarios:
                      type: array
                      items:
                        type: string
                      description: "Coment√°rios sobre o deck"
        '500':
          description: Erro interno do servidor

    post:
      summary: Criar um novo deck
      tags: [Decks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: "Nome do deck"
                formato:
                  type: string
                  description: "Formato do deck"
                descricao:
                  type: string
                  description: "Descri√ß√£o do deck"
                usuarioId:
                  type: integer
                  description: "ID do usu√°rio"
                publico:
                  type: boolean
                  description: "O deck √© p√∫blico"
                dataCriacao:
                  type: string
                  format: date-time
                  description: "Data de cria√ß√£o do deck"
                cartas:
                  type: array
                  items:
                    type: object
                    properties:
                      nome:
                        type: string
                        description: "Nome da carta"
                      tipo:
                        type: string
                        description: "Tipo da carta"
                      cor:
                        type: string
                        description: "Cor da carta"
                      custoMana:
                        type: string
                        description: "Custo de mana"
                      quantidade:
                        type: integer
                        description: "Quantidade de cartas"
                comentarios:
                  type: array
                  items:
                    type: string
                  description: "Coment√°rios sobre o deck"
            example:
              nome: "Deck Controle Azul"
              formato: "Commander"
              descricao: "Deck focado em controle e anula√ß√£o de m√°gicas."
              usuarioId: 5
              publico: true
              dataCriacao: "2025-04-19T15:30:00Z"
              cartas:
                - nome: "Counterspell"
                  tipo: "Instant√¢neo"
                  cor: "Azul"
                  custoMana: "UU"
                  quantidade: 2
                - nome: "Ponder"
                  tipo: "Feiti√ßo"
                  cor: "Azul"
                  custoMana: "U"
                  quantidade: 4
              comentarios: []
      responses:
        '201':
          description: Deck criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  formato:
                    type: string
                  descricao:
                    type: string
                  usuarioId:
                    type: integer
                  publico:
                    type: boolean
                  dataCriacao:
                    type: string
                    format: date-time
                  cartas:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nome:
                          type: string
                        tipo:
                          type: string
                        cor:
                          type: string
                        custoMana:
                          type: string
                        quantidade:
                          type: integer
                  comentarios:
                    type: array
                    items:
                      type: string
        '400':
          description: Requisi√ß√£o inv√°lida
        '500':
          description: Erro interno do servidor

  /decks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Obter um deck pelo ID
      tags: [Decks]
      responses:
        '200':
          description: Deck encontrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  formato:
                    type: string
                  descricao:
                    type: string
                  usuarioId:
                    type: integer
                  publico:
                    type: boolean
                  dataCriacao:
                    type: string
                    format: date-time
                  cartas:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nome:
                          type: string
                        tipo:
                          type: string
                        cor:
                          type: string
                        custoMana:
                          type: string
                        quantidade:
                          type: integer
                  comentarios:
                    type: array
                    items:
                      type: string
        '404':
          description: Deck n√£o encontrado
        '500':
          description: Erro interno do servidor

    put:
      summary: Atualizar um deck existente
      tags: [Decks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: "Nome do deck"
                formato:
                  type: string
                  description: "Formato do deck"
                descricao:
                  type: string
                  description: "Descri√ß√£o do deck"
                usuarioId:
                  type: integer
                  description: "ID do usu√°rio"
                publico:
                  type: boolean
                  description: "O deck √© p√∫blico"
                dataCriacao:
                  type: string
                  format: date-time
                  description: "Data de cria√ß√£o do deck"
                cartas:
                  type: array
                  items:
                    type: object
                    properties:
                      nome:
                        type: string
                        description: "Nome da carta"
                      tipo:
                        type: string
                        description: "Tipo da carta"
                      cor:
                        type: string
                        description: "Cor da carta"
                      custoMana:
                        type: string
                        description: "Custo de mana"
                      quantidade:
                        type: integer
                        description: "Quantidade de cartas"
                comentarios:
                  type: array
                  items:
                    type: string
                  description: "Coment√°rios sobre o deck"
      responses:
        '200':
          description: Deck atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Requisi√ß√£o inv√°lida
        '404':
          description: Deck n√£o encontrado
        '500':
          description: Erro interno do servidor

    delete:
      summary: Remover um deck
      tags: [Decks]
      responses:
        '204':
          description: Deck removido com sucesso (sem conte√∫do)
        '404':
          description: Deck n√£o encontrado
        '500':
          description: Erro interno do servidor

  /decks/{id}/comentarios:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Listar coment√°rios de um deck
      tags: [Coment√°rios]
      responses:
        '200':
          description: Lista de coment√°rios retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Identificador √∫nico do coment√°rio"
                    deckId:
                      type: integer
                      description: "ID do deck ao qual o coment√°rio pertence"
                    usuarioId:
                      type: integer
                      description: "ID do usu√°rio que fez o coment√°rio"
                    mensagem:
                      type: string
                      description: "Mensagem do coment√°rio"
                    dataComentario:
                      type: string
                      format: date-time
                      description: "Data e hora do coment√°rio"
              example:
                - id: 15
                  deckId: 1
                  usuarioId: 5
                  mensagem: "Adorei a escolha de cartas!"
                  dataComentario: "2025-04-19T16:00:00Z"
                - id: 16
                  deckId: 2
                  usuarioId: 7
                  mensagem: "Esse deck tem uma boa sinergia, gostei bastante da escolha das criaturas!"
                  dataComentario: "2025-04-19T17:30:00Z"
                - id: 17
                  deckId: 3
                  usuarioId: 8
                  mensagem: "Interessante a combina√ß√£o de feiti√ßos! Isso pode ser bem √∫til em partidas longas."
                  dataComentario: "2025-04-19T18:15:00Z"
        '404':
          description: Deck n√£o encontrado
        '500':
          description: Erro interno do servidor
    post:
      summary: Adicionar um coment√°rio a um deck
      tags: [Coment√°rios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deckId:
                  type: integer
                  description: "ID do deck que receber√° o coment√°rio"
                usuarioId:
                  type: integer
                  description: "ID do usu√°rio que est√° fazendo o coment√°rio"
                mensagem:
                  type: string
                  description: "Mensagem do coment√°rio"
                dataComentario:
                  type: string
                  format: date-time
                  description: "Data e hora do coment√°rio"
            example:
              deckId: 1
              usuarioId: 5
              mensagem: "Adorei a escolha de cartas!"
              dataComentario: "2025-04-19T16:00:00Z"
      responses:
        '201':
          description: Coment√°rio criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: "Identificador √∫nico do coment√°rio"
                  deckId:
                    type: integer
                    description: "ID do deck ao qual o coment√°rio pertence"
                  usuarioId:
                    type: integer
                    description: "ID do usu√°rio que fez o coment√°rio"
                  mensagem:
                    type: string
                    description: "Mensagem do coment√°rio"
                  dataComentario:
                    type: string
                    format: date-time
                    description: "Data e hora do coment√°rio"
              example:
                id: 18
                deckId: 1
                usuarioId: 6
                mensagem: "√ìtimo deck, gostei muito!"
                dataComentario: "2025-04-19T19:00:00Z"
        '400':
          description: Requisi√ß√£o inv√°lida
        '404':
          description: Deck n√£o encontrado
        '500':
          description: Erro interno do servidor

  /usuarios:
    get:
      summary: Listar todos os usu√°rios
      tags: [Usu√°rios]
      responses:
        '200':
          description: Lista de usu√°rios retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "ID do usu√°rio"
                    nome:
                      type: string
                      description: "Nome do usu√°rio"
                    email:
                      type: string
                      description: "E-mail do usu√°rio"
                    decksCriados:
                      type: integer
                      description: "N√∫mero de decks criados pelo usu√°rio"
                    dataCadastro:
                      type: string
                      format: date-time
                      description: "Data de cadastro do usu√°rio"
        '500':
          description: Erro interno do servidor

    post:
      summary: Criar um novo usu√°rio
      tags: [Usu√°rios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: "Nome do usu√°rio"
                email:
                  type: string
                  description: "E-mail do usu√°rio"
                decksCriados:
                  type: integer
                  description: "N√∫mero de decks criados"
                dataCadastro:
                  type: string
                  format: date-time
                  description: "Data de cadastro"
            example:
              nome: "Lucas Souza"
              email: "lucas.souza@example.com"
              decksCriados: 5
              dataCadastro: "2025-04-20T10:15:00Z"
      responses:
        '201':
          description: Usu√°rio criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  email:
                    type: string
                  decksCriados:
                    type: integer
                  dataCadastro:
                    type: string
                    format: date-time
        '400':
          description: Requisi√ß√£o inv√°lida
        '500':
          description: Erro interno do servidor

  /usuarios/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Obter perfil de um usu√°rio
      tags: [Usu√°rios]
      responses:
        '200':
          description: Perfil encontrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  email:
                    type: string
                  decksCriados:
                    type: integer
                  dataCadastro:
                    type: string
                    format: date-time
        '404':
          description: Usu√°rio n√£o encontrado
        '500':
          description: Erro interno do servidor

    put:
      summary: Atualizar informa√ß√µes de um usu√°rio
      tags: [Usu√°rios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: "Nome do usu√°rio"
                email:
                  type: string
                  description: "E-mail do usu√°rio"
                decksCriados:
                  type: integer
                  description: "N√∫mero de decks criados"
                dataCadastro:
                  type: string
                  format: date-time
                  description: "Data de cadastro"
      responses:
        '200':
          description: Usu√°rio atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Requisi√ß√£o inv√°lida
        '404':
          description: Usu√°rio n√£o encontrado
        '500':
          description: Erro interno do servidor

    delete:
      summary: Deletar um usu√°rio
      tags: [Usu√°rios]
      responses:
        '204':
          description: Usu√°rio deletado com sucesso (sem conte√∫do)
        '404':
          description: Usu√°rio n√£o encontrado
        '500':
          description: Erro interno do servidor


  /cartas:
    get:
      summary: Listar todas as cartas dispon√≠veis
      tags: [Cartas]
      responses:
        '200':
          description: Lista de cartas retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /cartas/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Buscar uma carta pelo ID
      tags: [Cartas]
      responses:
        '200':
          description: Carta encontrada com sucesso
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Carta n√£o encontrada
        '500':
          description: Erro interno do servidor
    put:
      summary: Atualizar uma carta existente
      tags: [Cartas]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Carta atualizada com sucesso
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Requisi√ß√£o inv√°lida
        '404':
          description: Carta n√£o encontrada
        '500':
          description: Erro interno do servidor
    delete:
      summary: Deletar uma carta
      tags: [Cartas]
      responses:
        '204':
          description: Carta deletada com sucesso (sem conte√∫do)
        '404':
          description: Carta n√£o encontrada
        '500':
          description: Erro interno do servidor

  /comentarios:
    post:
      summary: Criar um novo coment√°rio
      tags: [Coment√°rios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Coment√°rio criado com sucesso
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Requisi√ß√£o inv√°lida

  /comentarios/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      summary: Atualizar um coment√°rio
      tags: [Coment√°rios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Coment√°rio atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Requisi√ß√£o inv√°lida
        '404':
          description: Coment√°rio n√£o encontrado
        '500':
          description: Erro interno do servidor
    delete:
      summary: Deletar um coment√°rio
      tags: [Coment√°rios]
      responses:
        '204':
          description: Coment√°rio deletado com sucesso (sem conte√∫do)
        '404':
          description: Coment√°rio n√£o encontrado
        '500':
          description: Erro interno do servidor

  /auth/login:
    post:
      summary: Autenticar um usu√°rio
      tags: [Autentica√ß√£o]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
        '401':
          description: N√£o autorizado

  /auth/refresh:
    post:
      summary: Atualizar token de acesso
      tags: [Autentica√ß√£o]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Tokens atualizados com sucesso
          content:
            application/json:
              schema:
                type: object

  /curtidas/{deckId}:
    parameters:
      - name: deckId
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: Curtir um deck
      tags: [Curtidas]
      responses:
        '200':
          description: Deck curtido com sucesso
        '404':
          description: Deck n√£o encontrado

  /estatisticas:
    get:
      summary: Obter estat√≠sticas gerais da plataforma
      tags: [Estat√≠sticas]
      responses:
        '200':
          description: Estat√≠sticas obtidas com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsuarios:
                    type: integer
                  totalDecks:
                    type: integer
                  totalCurtidas:
                    type: integer
                  totalComentarios:
                    type: integer